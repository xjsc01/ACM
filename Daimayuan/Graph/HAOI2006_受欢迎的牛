/*
http://oj.daimayuan.top/course/23/problem/944
这一道题目重点是看有没有唯一的汇点
*/
#include <bits/stdc++.h>
using namespace std;
int n, m;
const int N = 1e5;
vector<int> edge[N];
int dfn[N], low[N], bel[N], idx, sz[N];
bool ins[N]; 
stack<int> stk;
vector< vector<int> >scc;
int cnt;
set<pair<int, int>> st;
void tarjan(int x){
    dfn[x] = low[x] = ++idx;
    ins[x] = true;
    stk.push(x);
    for(int y : edge[x]){
        if(!dfn[y]) tarjan(y);
        if(ins[y]){
            low[x] = min(low[x], low[y]);
        }
    }
    if(low[x] == dfn[x]){
        vector<int> c;
        ++cnt;
        while(true){
            int tt = stk.top();
            c.push_back(stk.top());
            bel[stk.top()] = cnt;
            ins[stk.top()] = false;
            stk.pop();
            sz[cnt]++;
            if(tt == x) break;
        }
        scc.push_back(c);
    }

}
int main()
{
    scanf("%d%d", &n, &m);
    for(int i = 1; i <= m; i++){
        int x, y;
        scanf("%d%d", &x, &y);
        if(st.count({x, y}) == 0)
            edge[x].push_back(y);
        st.insert({x, y});
    }
    for(int i = 1; i <= n; i++){
        if(!dfn[i]){
            tarjan(i);
        }
    }
    static int outdeg[N];
    for(int u = 1; u <= n; u++){
        for(int v : edge[u]){
            if(bel[u] != bel[v]){
                outdeg[bel[u]]++;
            }
        }
    }
    int num = 0, ans = 0;
    for(int i = 1; i <= cnt; i++){
        if(outdeg[i] == 0){
            num++;
            ans += sz[i];
        }
    }
    if(num == 1){
        printf("%d", ans);
    }
    else{
        puts("0");
    }
    return 0;
}
